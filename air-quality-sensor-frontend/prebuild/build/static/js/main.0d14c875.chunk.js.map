{"version":3,"sources":["api.jsx","chocobo.gif","ChocoboAnimation.jsx","CustomPieChart.jsx","App.jsx","index.jsx"],"names":["backendApi","axios","create","baseURL","window","location","hostname","env","BACKEND_PORT","timeout","getLatest24HoursAirQualityMeasurement","a","get","response","data","getLatest30DaysAirQualityMeasurement","getLatest365DaysAirQualityMeasurement","getLatest24HoursTemperatureMeasurement","getLatest30DaysTemperatureMeasurement","getLatest365DaysTemperatureMeasurement","ChocoboAnimation","useState","resetAnimation","setResetAnimation","springProps","useSpring","position","zIndex","reset","transform","config","duration","from","onStart","onRest","setTimeout","Math","random","img","src","logo","alt","style","CustomPieChart","label","width","heigh","dataKey","caption","COLORS","color","InnerText","viewBox","cx","cy","x","y","fill","textAnchor","dominantBaseline","PieChart","height","Pie","innerRadius","outerRadius","paddingAngle","startAngle","endAngle","Label","content","map","entry","index","Cell","length","App","dayAirTrend","setDayAirTrend","monthAirTrend","setMonthAirTrend","yearAirTrend","setYearAirTrend","dayTemperatureTrend","setDayTemperatureTrend","monthTemperatureTrend","setMonthTemperatureTrend","yearTemperatureTrend","setYearTemperatureTrend","showAnimation","setShowAnimation","useEffect","then","measurements","intervalId","setInterval","clearInterval","renderAirLineChart","ResponsiveContainer","LineChart","CartesianGrid","strokeDasharray","XAxis","tickMargin","YAxis","Tooltip","Legend","verticalAlign","Line","type","stroke","name","dot","renderTemperatureLineChart","domain","renderHumidityLineChart","className","pm2p5","pm10","temperature","humidity","trend","push","max","renderPieCharts","textAlign","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d14c875.chunk.js","sourcesContent":["import axios from \"axios\";\nimport env from \"react-dotenv\";\n\nconst backendApi = axios.create({\n  baseURL: `http://${window.location.hostname}:${env.BACKEND_PORT}`,\n  timeout: 20000,\n});\n\nexport const getLatest24HoursAirQualityMeasurement = async () => {\n  const response = await backendApi.get(\"/measurements/air/latest/day\");\n  return response.data;\n};\n\nexport const getLatest30DaysAirQualityMeasurement = async () => {\n  const response = await backendApi.get(\"/measurements/air/latest/month\");\n  return response.data;\n};\n\nexport const getLatest365DaysAirQualityMeasurement = async () => {\n  const response = await backendApi.get(\"/measurements/air/latest/year\");\n  return response.data;\n};\n\nexport const getLatest24HoursTemperatureMeasurement = async () => {\n  const response = await backendApi.get(\"/measurements/temperature/latest/day\");\n  return response.data;\n};\n\nexport const getLatest30DaysTemperatureMeasurement = async () => {\n  const response = await backendApi.get(\n    \"/measurements/temperature/latest/month\"\n  );\n  return response.data;\n};\n\nexport const getLatest365DaysTemperatureMeasurement = async () => {\n  const response = await backendApi.get(\n    \"/measurements/temperature/latest/year\"\n  );\n  return response.data;\n};\n","export default __webpack_public_path__ + \"static/media/chocobo.840447c8.gif\";","import logo from \"./chocobo.gif\";\nimport { animated, useSpring } from \"react-spring\";\nimport { useState } from \"react\";\n\nexport const ChocoboAnimation = () => {\n  const [resetAnimation, setResetAnimation] = useState(false);\n\n  const springProps = useSpring({\n    position: \"absolute\",\n    zIndex: 2,\n    reset: resetAnimation,\n    transform: \"translateX(-500px)\",\n    config: {\n      duration: 10000,\n    },\n    from: {\n      transform: \"translateX(2000px)\",\n    },\n    onStart: () => {\n      setResetAnimation(false);\n    },\n    onRest: () => {\n      setTimeout(() => setResetAnimation(true), Math.random() * 10000 + 20000);\n    },\n  });\n\n  return <animated.img src={logo} alt=\"\" style={{ ...springProps }} />;\n};\n","import { Cell, Label, Pie, PieChart } from \"recharts\";\n\nexport const CustomPieChart = ({\n  label,\n  width,\n  heigh,\n  data,\n  dataKey,\n  caption,\n  color\n}) => {\n  const COLORS = [color || \"#0088FE\", \"#E8E9EB\"];\n\n  function InnerText({ viewBox }) {\n    const { cx, cy } = viewBox;\n    return (\n      <>\n        <text\n          x={cx}\n          y={cy}\n          fill={COLORS[0]}\n          textAnchor=\"middle\"\n          dominantBaseline=\"central\"\n        >\n          <tspan x=\"50%\">{label}</tspan>\n        </text>\n        <text x={cx} y={cy} textAnchor=\"middle\" dominantBaseline=\"central\">\n          <tspan x=\"50%\" y=\"94%\">\n            {caption}\n          </tspan>\n        </text>\n      </>\n    );\n  }\n\n  return (\n    <PieChart width={width} height={heigh}>\n      <Pie\n        data={data}\n        innerRadius={40}\n        outerRadius={45}\n        paddingAngle={2}\n        startAngle={90}\n        endAngle={-270}\n        dataKey={dataKey}\n      >\n        <Label\n          width={30}\n          position=\"center\"\n          content={<InnerText data={data} width={width} />}\n        />\n        {data.map((entry, index) => (\n          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n        ))}\n      </Pie>\n    </PieChart>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nimport \"./App.css\";\nimport {\n  getLatest24HoursAirQualityMeasurement,\n  getLatest365DaysAirQualityMeasurement,\n  getLatest30DaysAirQualityMeasurement,\n  getLatest24HoursTemperatureMeasurement,\n  getLatest30DaysTemperatureMeasurement,\n  getLatest365DaysTemperatureMeasurement,\n} from \"./api\";\nimport { ChocoboAnimation } from \"./ChocoboAnimation\";\nimport { CustomPieChart } from \"./CustomPieChart\";\n\nconst App = () => {\n  const [dayAirTrend, setDayAirTrend] = useState([]);\n  const [monthAirTrend, setMonthAirTrend] = useState([]);\n  const [yearAirTrend, setYearAirTrend] = useState([]);\n\n  const [dayTemperatureTrend, setDayTemperatureTrend] = useState([]);\n  const [monthTemperatureTrend, setMonthTemperatureTrend] = useState([]);\n  const [yearTemperatureTrend, setYearTemperatureTrend] = useState([]);\n\n  const [showAnimation, setShowAnimation] = useState(false);\n\n  const fetchData = () => {\n    getLatest24HoursAirQualityMeasurement().then((data) => {\n      setDayAirTrend(data.measurements);\n    });\n    getLatest30DaysAirQualityMeasurement().then((data) => {\n      setMonthAirTrend(data.measurements);\n    });\n    getLatest365DaysAirQualityMeasurement().then((data) => {\n      setYearAirTrend(data.measurements);\n    });\n\n    getLatest24HoursTemperatureMeasurement().then((data) => {\n      setDayTemperatureTrend(data.measurements);\n    });\n    getLatest30DaysTemperatureMeasurement().then((data) => {\n      setMonthTemperatureTrend(data.measurements);\n    });\n    getLatest365DaysTemperatureMeasurement().then((data) => {\n      setYearTemperatureTrend(data.measurements);\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n\n    setTimeout(() => setShowAnimation(true), 10000);\n\n    const intervalId = setInterval(() => {\n      getLatest24HoursAirQualityMeasurement().then((data) => {\n        setDayAirTrend(data.measurements);\n      });\n      getLatest24HoursTemperatureMeasurement().then((data) => {\n        setDayTemperatureTrend(data.measurements);\n      });\n    }, 60 * 1000);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  const renderAirLineChart = (data) => (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <LineChart width={500} height={300} data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"timestamp\" tickMargin={10} />\n        <YAxis />\n        <Tooltip />\n        <Legend verticalAlign=\"top\" height={36} />\n        <Line\n          type=\"monotone\"\n          dataKey=\"pm2p5\"\n          stroke=\"#8884d8\"\n          name=\"PM 2.5\"\n          dot={false}\n        />\n        <Line\n          type=\"monotone\"\n          dataKey=\"pm10\"\n          stroke=\"#82ca9d\"\n          name=\"PM 10\"\n          dot={false}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n\n  const renderTemperatureLineChart = (data) => (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <LineChart width={500} height={300} data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"timestamp\" tickMargin={10} />\n        <YAxis domain={[\"auto\", \"auto\"]} />\n        <Tooltip />\n        <Legend verticalAlign=\"top\" height={36} />\n        <Line\n          type=\"monotone\"\n          dataKey=\"temperature\"\n          stroke=\"#8884d8\"\n          name=\"Temperature\"\n          dot={false}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n\n  const renderHumidityLineChart = (data) => (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <LineChart width={500} height={300} data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"timestamp\" tickMargin={10} />\n        <YAxis domain={[\"auto\", \"auto\"]} />\n        <Tooltip />\n        <Legend verticalAlign=\"top\" height={36} />\n        <Line\n          type=\"monotone\"\n          dataKey=\"humidity\"\n          stroke=\"#8884d8\"\n          name=\"Humidity\"\n          dot={false}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n\n  const renderDayTrend = () => (\n    <div className=\"mb-6 mr-3\">\n      <h2 className=\"title\" style={{ textAlign: \"center\" }}>\n        24 hour air pollution trend\n      </h2>\n      <div style={{ height: \"20rem\" }}>{renderAirLineChart(dayAirTrend)}</div>\n    </div>\n  );\n\n  const renderMonthTrend = () => (\n    <div className=\"mb-6 mr-6\">\n      <h2 className=\"title\" style={{ textAlign: \"center\" }}>\n        30 days air pollution trend\n      </h2>\n      <div style={{ height: \"20rem\" }}>{renderAirLineChart(monthAirTrend)}</div>\n    </div>\n  );\n\n  const renderYearTrend = () => (\n    <div className=\"mb-6 mr-6\">\n      <h2 className=\"title\" style={{ textAlign: \"center\" }}>\n        12 month air pollution trend\n      </h2>\n      <div style={{ height: \"20rem\" }}>{renderAirLineChart(yearAirTrend)}</div>\n    </div>\n  );\n\n  const renderTemperatureDayTrend = () => (\n    <div className=\"mb-6 mr-3\">\n      <h2 className=\"title\" style={{ textAlign: \"center\" }}>\n        24 hour temperature trend\n      </h2>\n      <div style={{ height: \"20rem\" }}>\n        {renderTemperatureLineChart(dayTemperatureTrend)}\n      </div>\n    </div>\n  );\n\n  const renderTemperatureMonthTrend = () => (\n    <div className=\"mb-6 mr-3\">\n      <h2 className=\"title\" style={{ textAlign: \"center\" }}>\n        30 days temperature trend\n      </h2>\n      <div style={{ height: \"20rem\" }}>\n        {renderTemperatureLineChart(monthTemperatureTrend)}\n      </div>\n    </div>\n  );\n\n  const renderTemperatureYearTrend = () => (\n    <div className=\"mb-6 mr-3\">\n      <h2 className=\"title\" style={{ textAlign: \"center\" }}>\n        12 month temperature trend\n      </h2>\n      <div style={{ height: \"20rem\" }}>\n        {renderTemperatureLineChart(yearTemperatureTrend)}\n      </div>\n    </div>\n  );\n\n  const renderHumidityDayTrend = () => (\n    <div className=\"mb-6 mr-3\">\n      <h2 className=\"title\" style={{ textAlign: \"center\" }}>\n        24 hour humidity trend\n      </h2>\n      <div style={{ height: \"20rem\" }}>\n        {renderHumidityLineChart(dayTemperatureTrend)}\n      </div>\n    </div>\n  );\n\n  const renderHumidityMonthTrend = () => (\n    <div className=\"mb-6 mr-3\">\n      <h2 className=\"title\" style={{ textAlign: \"center\" }}>\n        30 days humidity trend\n      </h2>\n      <div style={{ height: \"20rem\" }}>\n        {renderHumidityLineChart(monthTemperatureTrend)}\n      </div>\n    </div>\n  );\n\n  const renderHumidityYearTrend = () => (\n    <div className=\"mb-6 mr-3\">\n      <h2 className=\"title\" style={{ textAlign: \"center\" }}>\n        12 month humidity trend\n      </h2>\n      <div style={{ height: \"20rem\" }}>\n        {renderHumidityLineChart(yearTemperatureTrend)}\n      </div>\n    </div>\n  );\n\n  const renderPieCharts = () => {\n    const pm2p5 = [];\n    const pm10 = [];\n    const temperature = [];\n    const humidity = [];\n\n    if (dayAirTrend.length > 0) {\n      const trend = dayAirTrend[dayAirTrend.length - 1];\n\n      pm2p5.push({ pm2p5: trend.pm2p5 });\n      pm2p5.push({ pm2p5: Math.max(0, 20 - trend.pm2p5) });\n      pm10.push({ pm10: trend.pm10 });\n      pm10.push({ pm10: Math.max(0, 40 - trend.pm10) });\n    }\n\n    if (dayTemperatureTrend.length > 0) {\n      const trend = dayTemperatureTrend[dayTemperatureTrend.length - 1];\n\n      temperature.push({ temperature: trend.temperature });\n      humidity.push({ humidity: trend.humidity });\n      humidity.push({ humidity: 100 - trend.humidity });\n    }\n\n    return (\n      <div className=\"box mb-6 pb-6\">\n        <div className=\"columns\">\n          {dayAirTrend.length > 0 && (\n            <div className=\"column is-half-desktop is-flex is-justify-content-space-around\">\n              <CustomPieChart\n                width={150}\n                heigh={150}\n                label={`${pm2p5[0].pm2p5}`}\n                caption=\"PM 2.5\"\n                data={pm2p5}\n                dataKey=\"pm2p5\"\n                color=\"#D54C4C\"\n              />\n              <CustomPieChart\n                width={150}\n                heigh={150}\n                label={`${pm10[0].pm10}`}\n                caption=\"PM 10\"\n                data={pm10}\n                dataKey=\"pm10\"\n                color=\"#D54C4C\"\n              />\n            </div>\n          )}\n          {dayTemperatureTrend.length > 0 && (\n            <div className=\"column is-half-desktop is-flex is-justify-content-space-around\">\n              <CustomPieChart\n                width={150}\n                heigh={150}\n                label={`${temperature[0].temperature}°C`}\n                caption=\"Temperature\"\n                data={temperature}\n                dataKey=\"temperature\"\n                color=\"#00C1D4\"\n              />\n              <CustomPieChart\n                width={150}\n                heigh={150}\n                label={`${humidity[0].humidity}%`}\n                caption=\"Humidity\"\n                data={humidity}\n                dataKey=\"humidity\"\n                color=\"#00C1D4\"\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      {showAnimation && <ChocoboAnimation />}\n\n      <div className=\"container is-max-widescreen mt-6\">\n        {renderPieCharts()}\n\n        <div className=\"box mb-6\">\n          {dayAirTrend.length > 1 && renderDayTrend()}\n          {monthAirTrend.length > 1 && renderMonthTrend()}\n          {yearAirTrend.length > 1 && renderYearTrend()}\n        </div>\n\n        <div className=\"box mb-6\">\n          {dayTemperatureTrend.length > 1 && renderTemperatureDayTrend()}\n          {monthTemperatureTrend.length > 1 && renderTemperatureMonthTrend()}\n          {yearTemperatureTrend.length > 1 && renderTemperatureYearTrend()}\n        </div>\n\n        <div className=\"box mb-6\">\n          {dayTemperatureTrend.length > 1 && renderHumidityDayTrend()}\n          {monthTemperatureTrend.length > 1 && renderHumidityMonthTrend()}\n          {yearTemperatureTrend.length > 1 && renderHumidityYearTrend()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}