{"version":3,"sources":["api.jsx","chocobo.gif","chocobo-animation.jsx","App.jsx","index.jsx"],"names":["backendApi","axios","create","baseURL","window","location","hostname","env","BACKEND_PORT","timeout","getLatest24HoursAirQualityMeasurement","a","get","response","data","getLatest30DaysAirQualityMeasurement","getLatest365DaysAirQualityMeasurement","getLatest24HoursTemperatureMeasurement","getLatest30DaysTemperatureMeasurement","getLatest365DaysTemperatureMeasurement","ChocoboAnimation","useState","resetAnimation","setResetAnimation","springProps","useSpring","position","zIndex","reset","transform","config","duration","from","onStart","onRest","setTimeout","Math","random","img","src","logo","alt","style","App","dayAirTrend","setDayAirTrend","monthAirTrend","setMonthAirTrend","yearAirTrend","setYearAirTrend","dayTemperatureTrend","setDayTemperatureTrend","monthTemperatureTrend","setMonthTemperatureTrend","yearTemperatureTrend","setYearTemperatureTrend","showAnimation","setShowAnimation","useEffect","then","measurements","intervalId","setInterval","clearInterval","renderAirLineChart","ResponsiveContainer","width","height","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","tickMargin","YAxis","Tooltip","Legend","verticalAlign","Line","type","stroke","name","dot","renderTemperatureLineChart","domain","renderHumidityLineChart","className","length","textAlign","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02f2076f.chunk.js","sourcesContent":["import axios from \"axios\";\nimport env from \"react-dotenv\";\n\nconst backendApi = axios.create({\n  baseURL: `http://${window.location.hostname}:${env.BACKEND_PORT}`,\n  timeout: 20000,\n});\n\nexport const getLatest24HoursAirQualityMeasurement = async () => {\n  const response = await backendApi.get(\"/measurements/air/latest/day\");\n  return response.data;\n};\n\nexport const getLatest30DaysAirQualityMeasurement = async () => {\n  const response = await backendApi.get(\"/measurements/air/latest/month\");\n  return response.data;\n};\n\nexport const getLatest365DaysAirQualityMeasurement = async () => {\n  const response = await backendApi.get(\"/measurements/air/latest/year\");\n  return response.data;\n};\n\nexport const getLatest24HoursTemperatureMeasurement = async () => {\n  const response = await backendApi.get(\"/measurements/temperature/latest/day\");\n  return response.data;\n};\n\nexport const getLatest30DaysTemperatureMeasurement = async () => {\n  const response = await backendApi.get(\n    \"/measurements/temperature/latest/month\"\n  );\n  return response.data;\n};\n\nexport const getLatest365DaysTemperatureMeasurement = async () => {\n  const response = await backendApi.get(\n    \"/measurements/temperature/latest/year\"\n  );\n  return response.data;\n};\n","export default __webpack_public_path__ + \"static/media/chocobo.840447c8.gif\";","import logo from \"./chocobo.gif\";\nimport { animated, useSpring } from \"react-spring\";\nimport { useState } from \"react\";\n\nexport const ChocoboAnimation = () => {\n  const [resetAnimation, setResetAnimation] = useState(false);\n\n  const springProps = useSpring({\n    position: \"absolute\",\n    zIndex: 2,\n    reset: resetAnimation,\n    transform: \"translateX(-500px)\",\n    config: {\n      duration: 10000,\n    },\n    from: {\n      transform: \"translateX(2000px)\",\n    },\n    onStart: () => {\n      setResetAnimation(false);\n    },\n    onRest: () => {\n      setTimeout(() => setResetAnimation(true), Math.random() * 10000 + 20000);\n    },\n  });\n\n  return <animated.img src={logo} alt=\"\" style={{ ...springProps }} />;\n};\n","import { useEffect, useState } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nimport \"./App.css\";\nimport {\n  getLatest24HoursAirQualityMeasurement,\n  getLatest365DaysAirQualityMeasurement,\n  getLatest30DaysAirQualityMeasurement,\n  getLatest24HoursTemperatureMeasurement,\n  getLatest30DaysTemperatureMeasurement,\n  getLatest365DaysTemperatureMeasurement,\n} from \"./api\";\nimport { ChocoboAnimation } from \"./chocobo-animation\";\n\nconst App = () => {\n  const [dayAirTrend, setDayAirTrend] = useState([]);\n  const [monthAirTrend, setMonthAirTrend] = useState([]);\n  const [yearAirTrend, setYearAirTrend] = useState([]);\n\n  const [dayTemperatureTrend, setDayTemperatureTrend] = useState([]);\n  const [monthTemperatureTrend, setMonthTemperatureTrend] = useState([]);\n  const [yearTemperatureTrend, setYearTemperatureTrend] = useState([]);\n\n  const [showAnimation, setShowAnimation] = useState(false);\n\n  const fetchData = () => {\n    getLatest24HoursAirQualityMeasurement().then((data) => {\n      setDayAirTrend(data.measurements);\n    });\n    getLatest30DaysAirQualityMeasurement().then((data) => {\n      setMonthAirTrend(data.measurements);\n    });\n    getLatest365DaysAirQualityMeasurement().then((data) => {\n      setYearAirTrend(data.measurements);\n    });\n\n    getLatest24HoursTemperatureMeasurement().then((data) => {\n      setDayTemperatureTrend(data.measurements);\n    });\n    getLatest30DaysTemperatureMeasurement().then((data) => {\n      setMonthTemperatureTrend(data.measurements);\n    });\n    getLatest365DaysTemperatureMeasurement().then((data) => {\n      setYearTemperatureTrend(data.measurements);\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n\n    setTimeout(() => setShowAnimation(true), 10000)\n\n    const intervalId = setInterval(() => {\n      getLatest24HoursAirQualityMeasurement().then((data) => {\n        setDayAirTrend(data.measurements);\n      });\n      getLatest24HoursTemperatureMeasurement().then((data) => {\n        setDayTemperatureTrend(data.measurements);\n      });\n    }, 60 * 1000);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  const renderAirLineChart = (data) => (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <LineChart width={500} height={300} data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"timestamp\" tickMargin={10} />\n        <YAxis />\n        <Tooltip />\n        <Legend verticalAlign=\"top\" height={36} />\n        <Line\n          type=\"monotone\"\n          dataKey=\"pm2p5\"\n          stroke=\"#8884d8\"\n          name=\"PM 2.5\"\n          dot={false}\n        />\n        <Line\n          type=\"monotone\"\n          dataKey=\"pm10\"\n          stroke=\"#82ca9d\"\n          name=\"PM 10\"\n          dot={false}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n\n  const renderTemperatureLineChart = (data) => (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <LineChart width={500} height={300} data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"timestamp\" tickMargin={10} />\n        <YAxis domain={[\"auto\", \"auto\"]} />\n        <Tooltip />\n        <Legend verticalAlign=\"top\" height={36} />\n        <Line\n          type=\"monotone\"\n          dataKey=\"temperature\"\n          stroke=\"#8884d8\"\n          name=\"Temperature\"\n          dot={false}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n\n  const renderHumidityLineChart = (data) => (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <LineChart width={500} height={300} data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"timestamp\" tickMargin={10} />\n        <YAxis domain={[\"auto\", \"auto\"]} />\n        <Tooltip />\n        <Legend verticalAlign=\"top\" height={36} />\n        <Line\n          type=\"monotone\"\n          dataKey=\"humidity\"\n          stroke=\"#8884d8\"\n          name=\"Humidity\"\n          dot={false}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n\n  const renderDayTrend = () => (\n    <div className=\"mb-6 mr-3\">\n      <h2 className=\"title\" style={{ textAlign: \"center\" }}>\n        24 hour air pollution trend\n      </h2>\n      <div style={{ height: \"20rem\" }}>{renderAirLineChart(dayAirTrend)}</div>\n    </div>\n  );\n\n  const renderMonthTrend = () => (\n    <div className=\"mb-6 mr-6\">\n      <h2 className=\"title\" style={{ textAlign: \"center\" }}>\n        30 days air pollution trend\n      </h2>\n      <div style={{ height: \"20rem\" }}>{renderAirLineChart(monthAirTrend)}</div>\n    </div>\n  );\n\n  const renderYearTrend = () => (\n    <div className=\"mb-6 mr-6\">\n      <h2 className=\"title\" style={{ textAlign: \"center\" }}>\n        12 month air pollution trend\n      </h2>\n      <div style={{ height: \"20rem\" }}>{renderAirLineChart(yearAirTrend)}</div>\n    </div>\n  );\n\n  const renderTemperatureDayTrend = () => (\n    <div className=\"mb-6 mr-3\">\n      <h2 className=\"title\" style={{ textAlign: \"center\" }}>\n        24 hour temperature trend\n      </h2>\n      <div style={{ height: \"20rem\" }}>\n        {renderTemperatureLineChart(dayTemperatureTrend)}\n      </div>\n    </div>\n  );\n\n  const renderTemperatureMonthTrend = () => (\n    <div className=\"mb-6 mr-3\">\n      <h2 className=\"title\" style={{ textAlign: \"center\" }}>\n        30 days temperature trend\n      </h2>\n      <div style={{ height: \"20rem\" }}>\n        {renderTemperatureLineChart(monthTemperatureTrend)}\n      </div>\n    </div>\n  );\n\n  const renderTemperatureYearTrend = () => (\n    <div className=\"mb-6 mr-3\">\n      <h2 className=\"title\" style={{ textAlign: \"center\" }}>\n        12 month temperature trend\n      </h2>\n      <div style={{ height: \"20rem\" }}>\n        {renderTemperatureLineChart(yearTemperatureTrend)}\n      </div>\n    </div>\n  );\n\n  const renderHumidityDayTrend = () => (\n    <div className=\"mb-6 mr-3\">\n      <h2 className=\"title\" style={{ textAlign: \"center\" }}>\n        24 hour humidity trend\n      </h2>\n      <div style={{ height: \"20rem\" }}>\n        {renderHumidityLineChart(dayTemperatureTrend)}\n      </div>\n    </div>\n  );\n\n  const renderHumidityMonthTrend = () => (\n    <div className=\"mb-6 mr-3\">\n      <h2 className=\"title\" style={{ textAlign: \"center\" }}>\n        30 days humidity trend\n      </h2>\n      <div style={{ height: \"20rem\" }}>\n        {renderHumidityLineChart(monthTemperatureTrend)}\n      </div>\n    </div>\n  );\n\n  const renderHumidityYearTrend = () => (\n    <div className=\"mb-6 mr-3\">\n      <h2 className=\"title\" style={{ textAlign: \"center\" }}>\n        12 month humidity trend\n      </h2>\n      <div style={{ height: \"20rem\" }}>\n        {renderHumidityLineChart(yearTemperatureTrend)}\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      {showAnimation && <ChocoboAnimation />}\n      <div className=\"container is-max-widescreen mt-6\">\n        <div className=\"box mb-6\">\n          {dayAirTrend.length > 1 && renderDayTrend()}\n          {monthAirTrend.length > 1 && renderMonthTrend()}\n          {yearAirTrend.length > 1 && renderYearTrend()}\n        </div>\n\n        <div className=\"box mb-6\">\n          {dayTemperatureTrend.length > 1 && renderTemperatureDayTrend()}\n          {monthTemperatureTrend.length > 1 && renderTemperatureMonthTrend()}\n          {yearTemperatureTrend.length > 1 && renderTemperatureYearTrend()}\n        </div>\n\n        <div className=\"box mb-6\">\n          {dayTemperatureTrend.length > 1 && renderHumidityDayTrend()}\n          {monthTemperatureTrend.length > 1 && renderHumidityMonthTrend()}\n          {yearTemperatureTrend.length > 1 && renderHumidityYearTrend()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}